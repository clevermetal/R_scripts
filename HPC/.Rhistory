gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
?density
#Now we need the max of the density
#alternate method of plotting a function!
curve(fx, from=-5, to=5, col="red")
#initially we have f(x) = 2*x - 5*x^2 -5
#but by default optim does minimization
#so we multiply by -1 and minimize it
fx<-function(x){ -1*(2*x -5*(x^2) - 5)}
xrange<-seq(from=-5, to=5, length=100)
plot(xrange, fx(xrange), type="l")
#alternate method of plotting a function!
curve(fx, from=-5, to=5, col="red")
op1<-optim(100, fx)
op1$par
op1
op2<-optim(100, gx, control=list(fnscale=-1) )
op2$par
op2<-optim(100, gx, control=list(fnscale=-1) )
op2$par
gx<-function(x){ 2*x -5*(x^2) - 5}
op2<-optim(100, gx, control=list(fnscale=-1) )
op2$par
op3<-optim(100, gx, method="Brent",
lower=-100, upper=100,
control=list(fnscale=-1) )
op3$par
#Example
hx<-function(x){ (2*x -5*(x^2) - 5)*abs(sin(.5*x))}
curve(hx, from=-100, to=100)
jx<-function(x,y){
x^2 + y^2
}
jx<-function(x){
x[1]^2 + x[2]^2
}
op4<-optim(c(-100,100), jx)
op4$par
h<-function(x,a,b){
-(a-1)*log(x)+b*x
}
hx<-function(x,a,b){
-(a-1)*log(x)+b*x
}
?optim
-(a-1)*log(x)+b*x
hx<-function(x,a,b){
-(a-1)*log(x)+b*x
}
?optim
fit<-optim(10,fn=hx,method = "Brent",a=a,b=b,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit<-optim(10,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
?dgamma
?gamma
gam_vec<-seq(0,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
-(a-1)*log(x)+b*x
}
?optim
fit<-optim(10,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit
fit$par
h<-function(x, a, b){
(a-1)*log(x)-b*x
}
fit<-optim(5, fn=h, method="Brent", a=a, b=b,
control=list(fnscale=-1), lower=0.0001, upper=5)
fit<-optim(5, fn=h, method="Brent", a=10, b=2,
control=list(fnscale=-1), lower=0.0001, upper=5)
fit$par #the location of the maxima
h<-function(x, a, b){
(a-1)*log(x)-b*x
}
fit<-optim(5, fn=h, method="Brent", a=10, b=2,
control=list(fnscale=-1), lower=0.0001, upper=5)
fit$par #the location of the maxima
(a-1)*log(x)-b*x
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(10,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit$par
?dgamma
?gamma
gam_vec<-seq(0,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit$par
?dgamma
?gamma
gam_vec<-seq(0,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
gammfunc
#plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit$par
?dgamma
?gamma
gam_vec<-seq(0,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
#gammfunc
#plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit$par
?dgamma
?gamma
gam_vec<-seq(0,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
#gammfunc
#plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
fit$par
gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
fit
hx(fit$par,10,2)
gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
gam_vec<-seq(-10,10,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
gammfunc
plot(gam_vec,gammfunc, type = "l", col="blue")
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,0,15)
keep_gam<-hx(xgam)>ygam
keep_gam<-hx(xgam,10,2)>ygam
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,0,15)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
plot(norm_domain, x, type = "l")
points(xnew[keep],ynew[keep],cex=.3)
norm_domain<-seq(from=-5,to=5,length.out=10000)
x<-dnorm(norm_domain)
ynew<-runif(10000,0,m)
xnew<-runif(10000,-5,5)
par(mfrow=c(2,2), mar=c(3,2,2,2))
keep<-dnorm(xnew)>ynew
plot(norm_domain, x, type = "l")
points(xnew[keep],ynew[keep],cex=.3)
?dgamma
?gamma
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,0,15)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
?dgamma
?gamma
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,0,15)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
plot(gam_vec,gammfunc, type = "l", col="blue")
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep],ygam[keep])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
plot(gam_vec,gammfunc, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
(a-1)*log(x)-b*x
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
hvalues<-(gam_vec,hx(gam_vec,10,2))
hvalues<-(gam_vec,10,2)
hvalues<-hx(gam_vec,10,2)
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,0,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
ygam<-runif(1000,-Inf,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,-Inf,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,-10,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(1000,-100,hx(fit$par,10,2))
xgam<-runif(1000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(10000,-100,hx(fit$par,10,2))
xgam<-runif(10000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam])
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(10000,-100,hx(fit$par,10,2))
xgam<-runif(10000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam], .cex=0.3)
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(10000,-100,hx(fit$par,10,2))
xgam<-runif(10000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue")
points(xgam[keep_gam],ygam[keep_gam], cex=0.3)
gam_vec<-seq(-10,20,length.out=1000)
gammfunc<-dgamma(gam_vec,10,2)
plot(gam_vec,gammfunc, type = "l", col="blue")
#Now we need the max of the density
hx<-function(x,a,b){
(a-1)*log(x)-b*x
}
fit<-optim(5,fn=hx,method = "Brent",a=10,b=2,control=list(fnscale=-1),lower=0.0001, upper = 5)
hx(fit$par,10,2)
ygam<-runif(10000,-100,hx(fit$par,10,2))
xgam<-runif(10000,-10,20)
keep_gam<-hx(xgam,10,2)>ygam
hvalues<-hx(gam_vec,10,2)
plot(gam_vec,hvalues, type = "l", col="blue", main="Function h(x) sampled", xlab="")
points(xgam[keep_gam],ygam[keep_gam], cex=0.3)
set.seed(1)
s<-0.25
a<--5; b<-1
?runif
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(x,y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
x<-runif(50)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
set.seed(1)
s<-0.25
a<--5; b<-1
x<-runif(50)
e<-rnorm(50, sd=s)
y<-a+b*x+e
plot(y,x)
setwd("/Users/prinpillay/R_scripts/HPC")
library(doParallel)
cl <- makeCluster(2)
registerDoParallel(cl)
foreach(i=1:3) %dopar% sqrt(i)
setwd("/Users/prinpillay/R_scripts/HPC")
library(doParallel)
cl <- makeCluster(2)
registerDoParallel(cl)
foreach(i=1:3) %dopar% sqrt(i)
detectCores()
